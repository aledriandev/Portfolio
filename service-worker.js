"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/Portfolio/index.html","9ac70bad60d1f336b567a9e0449f99e5"],["/Portfolio/static/css/main.33eb9ed5.css","b229364050ef31515923bf8a515fff15"],["/Portfolio/static/js/main.bbb8efb7.js","d498933f1704b9087287fa239c4b2ba2"],["/Portfolio/static/media/5mejores2.39a20dc8.png","39a20dc81c7f53d0a72148ec06995d5a"],["/Portfolio/static/media/ale6.4f9df454.png","4f9df45458c55ccad13f8698851d17a8"],["/Portfolio/static/media/buscaminas.ee637c95.png","ee637c95abc3be90dcf68e9e44f49b3d"],["/Portfolio/static/media/girlcode5.423d1db0.png","423d1db025138ec2e61d8551c33cc8c5"],["/Portfolio/static/media/git.4d8a6733.png","4d8a67337f9177e86f7da73e8e7cdfa6"],["/Portfolio/static/media/lyft.a70f71b4.png","a70f71b42948a00f721f48aacc59cd57"],["/Portfolio/static/media/mejorSquad.742ca389.png","742ca389666ba2b1b9f4507195747af2"],["/Portfolio/static/media/memory.a02dd472.png","a02dd472f24b2246410f26624736b104"],["/Portfolio/static/media/react.7f147596.png","7f147596e96ada348f00532faa3f1875"],["/Portfolio/static/media/reserva.eb73b9b2.png","eb73b9b2236d8c486c49bb007873aa65"],["/Portfolio/static/media/rocking.f882691c.png","f882691ca93a7f0626dc9a298d3ab350"],["/Portfolio/static/media/sass.b85cfad3.png","b85cfad3e6c4eb0dff3db253a68e40eb"],["/Portfolio/static/media/trello.23c7fe49.png","23c7fe4955d957ba04e9e98345106dd2"],["/Portfolio/static/media/trivia.79d572d1.png","79d572d17bd2e75d9c39a5a27a2a5305"],["/Portfolio/static/media/youtube.cd43ff35.png","cd43ff354a2539a74ad648412e2032aa"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){if(!e.redirected)return Promise.resolve(e);return("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})})},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/Portfolio/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});